name: Monthly builds

on:
  schedule:
    - cron: '0 0 1 * *'
  push:
    tags:
      - '*'
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  generate-snapcrafts:
    name: Generate snapcraft.yaml files
    runs-on: [ubuntu-latest]
    outputs:
      matrix: ${{ steps.generate.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10' 
      - name: Generate snapacraft yaml files for all ros distros
        id: generate
        run: |
          pip install .
          python3 ./generate_all_ros_meta_snapcraft_file.py
          echo "matrix=$(ls snaps/ | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
      - name: Upload snapcrafts folders
        uses: actions/upload-artifact@v3
        with:
          name: snaps
          path: snaps/

  snap-build:
    name: Snap remote build
    needs: generate-snapcrafts
    runs-on: [ubuntu-latest]
    outputs:
      snap_files_list: ${{ steps.snap-list.outputs.snap_files_list }}
    strategy:
      fail-fast: false
      matrix:
        snap_names: ${{ fromJSON(needs.generate-snapcrafts.outputs.matrix) }}
    env:
      SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT7_CREDS }}
      # snapcraft remote-build will create a repository with the name decided by the --build-id arg
      # URL to this repo echoed below to help debug builds (does not change if the workflow is re-run)
      SNAPCRAFT_BUILDER_ID: ${{ github.run_id }}
    steps:
      - name: Download snapcrafts folders
        uses: actions/download-artifact@v3
        with:
          name: snaps
      - name: print matrix
        run: |
          echo ${{ matrix.snap_names }}
      - name: Add LP credentials
        run: |
          mkdir -p ~/.local/share/snapcraft/provider/launchpad/
          echo '${{ secrets.LP_CREDS }}' > ~/.local/share/snapcraft/provider/launchpad/credentials
          git config --global user.email "canonical-robotics-brand@canonical.com"
          git config --global user.name "Canonical robotics"
      - name: Print Launchpad build repository
        run: |
          echo "Building at: https://git.launchpad.net/~ce-certification-qa/+snap/$SNAPCRAFT_BUILDER_ID"
      # - uses: snapcore/action-build@v1
      #   with:
      #     path: /home/runner/work/ros-content-sharing-snaps/ros-content-sharing-snaps/${{ matrix.snap_names }}
      #     snapcraft-args: "remote-build --launchpad-accept-public-upload --build-id ${{ matrix.snap_names }}-${SNAPCRAFT_BUILDER_ID}"
      # - uses: actions/upload-artifact@v3
      #   name: Upload snapcraft logs
      #   if: always()
      #   with:
      #     name: snapcraft_logs
      #     path: |
      #       /home/runner/.cache/snapcraft/log/
      #       /home/runner/.local/state/snapcraft/log/
      #       /home/runner/work/ros-content-sharing-snaps/ros-content-sharing-snaps/**/ros-*.txt
      # - uses: actions/upload-artifact@v3
      #   name: Upload the snap as artifact
      #   with:
      #     name: ${{ matrix.snap_names }}
      #     path: /home/runner/work/ros-content-sharing-snaps/ros-content-sharing-snaps/**/*.snap
      - name: DEBUG
        run: |
          echo "hello" > /home/runner/work/ros-content-sharing-snaps/ros-content-sharing-snaps/noetic-ros-base/aa_0.1_amd64.snap
          echo "world" > /home/runner/work/ros-content-sharing-snaps/ros-content-sharing-snaps/noetic-ros-base/aa_0.1_arm64.snap
      - name: Generate matrix for upload
        id: snap-list
        run: |
          SNAPS="$(ls /home/runner/work/ros-content-sharing-snaps/ros-content-sharing-snaps/**/*.snap)"
          echo "snap_files_list+=($SNAPS)" >> $GITHUB_OUTPUT
          echo $GITHUB_OUTPUT

  generate-uploads-matrix:
    name: Generate GH CI matrix for uploads
    runs-on: [ubuntu-latest]
    needs: snap-build
    outputs:
      matrix: ${{ steps.generate.outputs.matrix }}
    steps:
      - name: Generate GH CI matrix for uploads
        id: generate
        run: |
          SNAP_FILE_LIST=${{ needs.snap-build.outputs.snap_files_list }}
          SNAP_FILE_LIST=$(jq --compact-output --null-input '$ARGS.positional' --args -- "${SNAP_FILE_LIST[@]}")
          echo "matrix=$SNAP_FILE_LIST" >> $GITHUB_OUTPUT
          

  ros-publish:
    # if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        files_to_upload: ${{ fromJSON(needs.generate-uploads-matrix.outputs.matrix) }}
    needs: generate-uploads-matrix
    steps:
      - name: print matrix
        run: |
          echo ${{ matrix.files_to_upload }}
    # - uses: actions/download-artifact@v3
    #   with:
    #     name: ${{ matrix.snap_names }}
    #     path: .
    # - run: |
    #   apt install snapd --yes
    #   snap install snapcraft
    #   SNAPCRAFT_STORE_CREDENTIALS=${{ secrets.STORE_LOGIN }}
    #   for snap in ${{ matrix.snap_names }} do
    #     PIDS[] = snapcraft upload ${{ matrix.snap_names }}/$snap --release latest/candidate &
    #   end
    # - uses: snapcore/action-publish@v1
    #   env:
    #     SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.STORE_LOGIN }}
    #   with:
    #     snap: ${{needs.build.outputs.snap-file}}
    #     release: 'edge'